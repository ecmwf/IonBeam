---
# Structure of this config file
#
# At a high level it defines a pipeline that looks like this:
#
# Sources -> Prepocessors -> Aggregators -> Encoders
#
# NB: Currently only one encoder is allowed but this will be fixed soon.
# Sources - Either operate over data files or by pulling time delineated chunks from APIs
# Preprocessors - Mainly their job is to rename the data columns and do some cleanup here and there
# Aggregators - Group observations by some criteria,
#        i.e all MeteoTracks that start in a in a one hour time window get grouped
# Encoders - Write out the data to some output, currently CSV or ODB to disk

# The structure of this config file is controlled my the structure of python dataclasses
# To see for example, which encoders exist, go to src/ionbeam/core/config_parser.py
# From there we see an encoder is either ODCEncoder or CSVEncoder
# Finding ODCEncoder in the codebase we can see what fields it expects in the config
# With some docstrings and autodoc magic one should be able to use this to generate a
# nice documentation page for this yaml config.
global_config:
  canonical_variables: !include canonical_variables.yaml
  config_path: .
  data_path: ../data/

pipeline:
  - sources
  - parsers
  - aggregators
  - encoders

sources:
  - class: MeteoTrackerOfflineSource #Can use either MeteoTrackerOfflineSource or MeteoTrackerSource
    metadata:
        state: raw
        source: meteotracker
    source: meteotracker
    cache_directory: inputs/meteotracker
    secrets_file: secrets.yaml
    start_date: "2022-05-25"
    end_date: "2022-05-26"
    static_metadata_columns:
      - name: track_id
        key: id
      - name: author
      - name: offset_tz


  # - class: CIMASource
    # metadata:
    #   - state: raw
    #   - source: cima
  #   cache_directory: inputs/cima
  #   secrets_file: secrets.yaml
  #   start_date: "2023-05-22"
  #   end_date: "2023-05-24"
  #   frequency: 3D # 3 days is the max API request
  #   static_metadata_columns:
  #     - name: station_id
  #       key: id
  #     - name: lat
  #     - name: lon

  - class: MultiFileSource
    metadata:
        state: raw
        source: sensor.community
    paths:
      - "**/*.csv"
    basepath: inputs/sensor_community

encoders:
  - class: ODCEncoder
    match:
      - source: .*
        state: "time_aggregated"
    output: outputs/{source}/odb/{observation_variable}/{observation_variable}_{time_slice.start_time}.odb
    MARS_keys: !include MARS_keys.yaml
  # - class: CSVEncoder
  #   match:
  #   - source: .*
  #   output: data/outputs/{source}/csv/{observation_variable}/{observation_variable}_{time_slice.start_time}.csv



aggregators:
  - class: TimeAggregator
    match:
    - source: meteotracker
      state: parsed
    # granularity: 1H
  - class: TimeAggregator
    match:
    - source: cima
      state: parsed
    granularity: 1H
  - class: TimeAggregator
    match:
    - source: sensor.community
      state: parsed
    granularity: 1H
    emit_after_hours: 48


parsers:
  - class: CSVParser
    match:
      - state: raw
        source: meteotracker

    identifying_columns:
      - name: time
        key: time
        type: datetime


    metadata_columns:
      - name: author
      - name: offset_tz
      - name: track_id
      - name: lat
        unit: "°"
      - name: lon
        unit: "°"
      - name: air_pressure_near_surface
        key: P
        unit: mbar


    value_columns:
      - name: air_temperature_near_surface
        key: T0
        unit: "°C"
      - name: relative_humidity_near_surface
        key: H
        unit: "%"
      - name: altitude
        key: a
        unit: m
      - name: dew_point
        key: td
        unit: "°C"
      - name: humidity_index
        key: HDX
        unit: "°C"
      - name: vertical_temperature_gradient
        key: i
        unit: "°C/100m"
        # ignore: true
      - name: wind_speed_near_surface
        key: s
        unit: km/h
      - name: solar_radiation_index
        key: L
      - name: bluetooth_RSSI
        key: bt
        unit: dBm
      - name: carbon_dioxide
        key: CO2
        unit: ppm
      - name: PM1.0
        key: m1
        unit: "μg/m3"
      - name: mass_concentration_PM1.0
        key: m1
        unit: "μg/m3"
      - name: mass_concentration_PM2.5
        key: m2
        unit: "μg/m3"
      - name: mass_concentration_PM4.0
        key: m4
        unit: "μg/m3"
      - name: mass_concentration_PM10
        key: m10
        unit: "μg/m3"
      - name: number_concentration_PM0.5
        key: n0
        unit: "#/cm3"
      - name: number_concentration_PM1.0
        key: n1
        unit: "#/cm3"
      - name: number_concentration_PM2.5
        key: n2
        unit: "#/cm3"
      - name: number_concentration_PM4.0
        key: n4
        unit: "#/cm3"
      - name: number_concentration_PM10
        key: n10
        unit: "#/cm3"
      - name: typical_particle_size
        key: tps
        unit: "μm"
      - name: EPA_Air_Quality
        key: EAQ
      - name: Fast_Air_Quality
        key: FAQ
      - name: ozone
        key: O3
        unit: "ppb"
      - name: observation_id
        key: _id

  - class: CSVParser
    match:
    - state: raw
      source: cima

    identifying_columns:
      - name: time
        key: time
        type: datetime

    metadata_columns:
      - name: station_id
      - name: lat
        unit: "°"
      - name: lon
        unit: "°"

    value_columns:
      - name: rain_gauge
        key: "PLUVIOMETRO [mm]"
        unit: "mm"
      - name: air_temperature_near_surface
        key: "TERMOMETRO [°C]"
        unit: "°C"
      - name: relative_humidity_near_surface
        key: "IGROMETRO [%]"
        unit: "%"
      - name: wind_direction_near_surface
        key: "DIREZIONEVENTO [Degrees]"
        unit: "Degrees"
      - name: wind_speed_near_surface
        key: "ANEMOMETRO [m/s]"
        unit: "m/s"
      - name: air_pressure_near_surface
        key: "BAROMETRO [hPa]"
        unit: "hPa"
      - name: radiometer
        key: "RADIOMETRO [W/m^2]"
        unit: "W/m^2"
      - name: battery_level
        key: "BATTERIA [V]"
        unit: "V"
      - name: internal_temperature
        key: "TERMOMETRO_INTERNA [°C]"
        unit: "°C"
      - name: wind_gust_direction
        key: "DIREZIONEVENTO_RAFFICA [Degrees]"
        unit: "Degrees"
      - name: wind_gust
        key: "ANEMOMETRO_RAFFICA [m/s]"
        unit: "m/s"
      - name: thermometer_min
        key: "TERMOMETRO_MIN [°C]"
        unit: "°C"
      - name: thermometer_max
        key: "TERMOMETRO_MAX [°C]"
        unit: "°C"
      - name: signal_strength
        key: "SIGNAL_STRENGTH [CSQ]"
        unit: "CSQ"

  - class: CSVParser
    match:
      - state: raw
        source: sensor.community
    separator: ";"
    custom_nans:
      - unknown

    identifying_columns:
      - name: time
        key: timestamp
        type: datetime


    metadata_columns:
      - name: station_id
        key: sensor_id
      - name: sensor_type
      - name: location
      - name: lat
        unit: "°"
      - name: lon
        unit: "°"
      - name: air_pressure_near_surface
        key: pressure
        unit: Pa
      - name: altitude
        unit: m


    value_columns:
      - name: air_temperature_near_surface
        key: temperature
        unit: "°C"
      - name: relative_humidity_near_surface
        key: humidity
        unit: "%"
      - name: pressure_sealevel
        unit: Pa
