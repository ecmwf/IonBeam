# name & type: mars key is name@type

# These values pulled from codes.ecmwf.int/ if possible
# dtype: INTEGER
# column_decription: the description for this column
# value_description: the meaning of this particular numeric value
# dtype: one of REAL, DOUBLE, INTEGER, STRING

# Each Mars_key can can be populated using different methods:

# Fill this column with a literal constant
# method: constant
# value: value

# Fill this column by looking the observation variable up in the config
# method: from_config

# Fill this column with a static value by looking up a key in the message metadata
# fill_method: from_metadata
# key: author

# Fill this column with a varying value by looking up a key in the message data
# fill_method: from_data
# key: lat

# Fill this column using a function defined in ionbeam.encoders.odb
# fill_method: function
# key: function_name

- name: class
  fill_method: constant
  value: rd
  dtype: STRING

- name: expver
  dtype: STRING
  fill_method: constant
  value: xxxx
  column_description: mars key - experiment id

- name: stream
  dtype: STRING
  fill_method: constant
  value: iot
  column_description: mars key - forecasting system used to generate data

- name: reportype
  dtype: INTEGER
  fill_method: from_config
  column_description: Mandatory mars key that labels the observation variable

#################################################
# Stuff required to keep the mars client happy  #
#################################################

- name: andate
  dtype: INTEGER
  column_description: Date of data ingestion, encoded as YYYYMMDD
  fill_method: function
  key: decimal_encoded_date

- name: antime
  dtype: INTEGER
  column_description: Time of data ingestion, encoded as HHMM
  fill_method: function
  key: four_digit_hour

- name: groupid@hdr
  dtype: INTEGER
  fill_method: constant
  value: 17
  column_description: Mandatory (for now) mars key

#################################################
# Other metadata                                #
#################################################

- name: project
  dtype: STRING
  fill_method: constant
  value: None
  column_description: If this data is generated by a particular EU project, I-Change, Trigger or AD4GD

- name: platform
  fill_method: from_metadata
  key: source
  column_description: 'The aggregation platform that we retrieved this data from.'
  dtype: STRING

- name: external_id
  dtype: STRING
  fill_method: function
  key: station_id
  column_description: 'A unique id for the individual entity data came from.'

- name: sensor_type
  dtype: STRING
  fill_method: from_data
  key: sensor_type

- name: location_id
  dtype: STRING
  fill_method: from_data
  key: location

- name: observation_variable
  dtype: STRING
  fill_method: from_metadata
  key: observation_variable
  column_description: 'The observed property.'

#################################################
# Actual Data                                   #
#################################################

- name: date
  dtype: INTEGER
  column_description: obs. date
  fill_method: function
  key: decimal_encoded_date

- name: time
  dtype: INTEGER
  column_description: obs. exact time
  fill_method: function
  key: four_digit_hour

- name: timestamp
  dtype: STRING
  column_description: An ISO timestamp in UTC.
  fill_method: from_data
  key: time

- name: altitude
  column_description: altitude
  dtype: REAL
  fill_method: function
  key: altitude

# lat and lon coords
- name: lat
  column_description: latitude
  dtype: REAL
  fill_method: from_data
  key: lat

- name: lon
  column_description: longitude
  dtype: REAL
  fill_method: from_data
  key: lon

# The minutes including 2dp fractional part
# - name: minutes
#   dtype: REAL
#   column_description: custom
#   fill_method: function
#   key: minutes_with_fractional_seconds

# The actual observed value
- name: observed_value
  column_description: observed variable
  dtype: REAL
  fill_method: function
  key: obsvalue
