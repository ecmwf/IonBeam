# name & type: mars key is name@type

# These values pulled from codes.ecmwf.int/ if possible
# dtype: INTEGER
# column_decription: the description for this column
# value_description: the meaning of this particular numeric value
# dtype: one of REAL, DOUBLE, INTEGER, STRING

# Each Mars_key can can be populated using different methods:

# Fill this column with a literal constant
# method: constant
# value: value

# Fill this column by looking the observation variable up in the config
# method: from_config

# Fill this column with a static value by looking up a key in the message metadata
# fill_method: from_metadata
# key: author

# Fill this column with a varying value by looking up a key in the message data
# fill_method: from_data
# key: lat

# Fill this column using a function defined in obsproc.encoders.odb
# fill_method: function
# key: function_name

# - name: codetype@body
#   dtype: INTEGER
#   column_description: custom
#   fill_method: from_config

- name: entryno@body          # this is a given
  fill_method: constant
  value: 1
  column_description: entry sq. no.
  dtype: INTEGER

# for now, we prepare and ingest temperature and humidity, and air quality data
- name: varno@body
  fill_method: from_config    # value: rh2m: 58; t2m: 39; still checking ADS/CAMS for particulate matter_10um and particulate_matter_2.5um 
  column_description: variable number
  dtype: INTEGER

- name: obstype@hdr           # https://codes.ecmwf.int/odb/obstype/
  fill_method: constant
  value: 1                    # we go with synop for now
  dtype: INTEGER

- name: statid@hdr            # this is set for our dev work
  fill_method: constant
  value: ++++xxxx
  dtype: STRING

- name: codetype@hdr # value 17 for Automatic Land SYNOP
  fill_method: constant
  value: 17
  column_description: observation codetype
  dtype: INTEGER

- name: project@hdr 
  fill_method: constant
  value: iCHANGE
  column_description: project name
  dtype: STRING

- name: source@hdr
  value: CIMA 
  column_description: 'source id of obs. (character*8) : re-analysis purposes'
  dtype: STRING

  # This should be the station_id from the datasets 
- name: stationid@hdr
  fill_method: from_data    # station_name
  column_description: variable identifier
  dtype: STRING 

- name: dataset@hdr
  value: station
  fill_method: constant     
  column_description: identifier for mobile or stationary observation
  dtype: INTEGER

- name: groupid@hdr  # 17 for conventional or CONV is a given for us
  dtype: INTEGER 
  fill_method: constant
  value: 17
  column_description: mars key - observation group

- name: reportype@hdr
  dtype: INTEGER
  fill_method: constant
  value: 16001
  column_description: mars key - report type for mars


- name: class@desc # given
  dtype: INTEGER
  fill_method: constant
  value: 2
  column_description: mars key - ecmwf classification for data

- name: type@desc   # ODB Analysis input "oai" is a given
  dtype: INTEGER
  fill_method: constant
  value: 264
  column_description: mars key - type of field used to retrieve data

- name: stream@desc # given
  dtype: INTEGER
  fill_method: constant
  value: 1247
  column_description: mars key - forecasting system used to generate data

- name: expver@desc # given
  dtype: STRING
  fill_method: constant
  value: xxxx
  column_description: mars key - experiment id

- name: levtype@desc # that's a given for us 
  dtype: STRING
  fill_method: constant
  value: sfc
  column_description: mars key for pressure level / surface level

- name: andate@desc
  dtype: INTEGER
  column_description: analysis date
  fill_method: function
  key: decimal_encoded_date

- name: antime@desc
  dtype: INTEGER
  column_description: analysis time
  fill_method: function
  key: four_digit_hour


- name: date@hdr
  dtype: INTEGER
  column_description: obs. date
  fill_method: function
  key: decimal_encoded_date

- name: time@hdr
  dtype: INTEGER
  column_description: obs. exact time in UTC
  fill_method: function
  key: four_digit_hour

- name: stalt@hdr
  column_description: altitude
  dtype: REAL
  fill_method: function
  key: altitude

# lat and lon coords
- name: lat@hdr
  column_description: latitude
  dtype: REAL
  fill_method: from_data
  key: lat

- name: lon@hdr
  column_description: longitude
  dtype: REAL
  fill_method: from_data
  key: lon

# The actual observed value
- name: obsvalue@body
  column_description: observed variable
  dtype: REAL
  fill_method: function
  key: obsvalue
